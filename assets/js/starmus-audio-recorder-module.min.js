function createButtonStateEnforcer(e,t,a,o=console.log){let r=document.getElementById(e?.id||"recordButton");if(!r)return null;const getLiveButton=()=>document.getElementById(r.id),shouldBeEnabled=()=>{const e=t?.[a];return"granted"===e||"prompt"===e};let n=getLiveButton();n?n.disabled&&shouldBeEnabled()?(o(`StateEnforcer (Immediate Init for ID ${n.id}): Button is disabled but should be enabled. Re-enabling.`),n.disabled=!1):n.disabled||shouldBeEnabled()||(o(`StateEnforcer (Immediate Init for ID ${n.id}): Button is enabled but should be disabled. Disabling.`),n.disabled=!0):o.warn(`StateEnforcer (Immediate Init): Button with ID ${r.id} not found for immediate check.`);const i=new MutationObserver((e=>{let t=getLiveButton();if(t)for(const a of e)if("attributes"===a.type&&"disabled"===a.attributeName){const e=shouldBeEnabled();t.disabled&&e?(o(`StateEnforcer (Mutation for ID ${t.id}): Button was disabled externally — re-enabling.`),t.disabled=!1):t.disabled||e||(o(`StateEnforcer (Mutation for ID ${t.id}): Button enabled while permission is denied — disabling.`),t.disabled=!0)}}));return i.observe(r,{attributes:!0,attributeFilter:["disabled"]}),o(`StateEnforcer: MutationObserver active on initial button instance with ID "${r.id}".`),[1500,3e3,5e3].forEach((e=>{setTimeout((()=>{const t=getLiveButton();t&&(document.body.contains(r),t.disabled&&shouldBeEnabled()?(o(`StateEnforcer (Timeout ${e}ms for ID ${t.id}): Correction — re-enabling button.`),t.disabled=!1):t.disabled||shouldBeEnabled()||(o(`StateEnforcer (Timeout ${e}ms for ID ${t.id}): Button enabled, should be disabled. Disabling.`),t.disabled=!0))}),e)})),i}!function(){let e,t,a,o,r,n,i,d,s={recordButtonId:"recordButton",pauseButtonId:"pauseButton",deleteButtonId:"deleteButton",timerDisplayId:"sparxstar_timer",audioPlayerId:"sparxstar_audioPlayer",statusDisplayId:"sparxstar_status",levelBarId:"sparxstar_audioLevelBar",audioLevelTextId:"sparxstar_audioLevelText",levelBarWrapId:"sparxstar_audioLevelWrap",uuidFieldId:"audio_uuid",fileInputId:"audio_file",recorderContainerSelector:"[data-enabled-recorder]",maxRecordingTime:12e5,buildHash:"c8aaf461c00bc0b613a759027af26b2faeaad730",logPrefix:"STARMUS:"},u={},l=[],c=null,p=!1,m=!1,y=0,f=null,B=!1;window.sparxstarRecorderState=window.sparxstarRecorderState||{micPermission:"prompt"};let b=null;function _log(...e){}function _animateBar(){if(r&&n&&u.levelBar&&u.audioLevelText&&p&&!m){r.getByteFrequencyData(n);let e=n.reduce(((e,t)=>e+t),0)/n.length/255*100*2.5;const t=Math.max(0,Math.min(e,100)),a=Math.round(t);u.levelBar.style.width=`${t}%`,u.levelBar.setAttribute("aria-valuenow",a),u.audioLevelText.textContent=`${a}%`,u.levelBarWrap&&u.levelBarWrap.classList.contains("sparxstar_visually_hidden")&&u.levelBarWrap.classList.remove("sparxstar_visually_hidden"),d=requestAnimationFrame(_animateBar)}else _stopAnimationBarLoop()}function _stopAnimationBarLoop(){d&&(cancelAnimationFrame(d),d=null),u.levelBar&&(u.levelBar.style.width="0%",u.levelBar.setAttribute("aria-valuenow",0)),u.audioLevelText&&(u.audioLevelText.textContent="0%"),u.levelBarWrap&&u.levelBarWrap.classList.add("sparxstar_visually_hidden")}function _formatTime(e){const t=Math.floor(e/1e3),a=Math.floor(t/60),o=t%60;return`${String(a).padStart(2,"0")}:${String(o).padStart(2,"0")}`}function _updateTimerColor(e){if(!u.timerDisplay)return;u.timerDisplay.classList.remove("red","orange"),u.timerDisplay.style.color="",e<=12e4?u.timerDisplay.classList.add("red"):e<=42e4&&u.timerDisplay.classList.add("orange")}function _updateTimerDisplay(){if(!u.timerDisplay)return;let e=0;p&&!m&&(e=Date.now()-a);const t=y+e,o=Math.max(0,s.maxRecordingTime-t);u.timerDisplay.textContent=_formatTime(o),_updateTimerColor(o),o<=0&&v.stop()}function _stopTimerAndResetDisplay(){clearInterval(t),t=null,y=0,u.timerDisplay&&(u.timerDisplay.textContent=_formatTime(s.maxRecordingTime),_updateTimerColor(s.maxRecordingTime))}function _updateStatus(e){if(u.statusDisplay){const t=u.statusDisplay.querySelector(".sparxstar_status__text");t?t.textContent=e:u.statusDisplay.textContent=e,u.statusDisplay.classList.remove("sparxstar_visually_hidden")}}function _handleRecordingReady(){u.recordButton&&(u.recordButton.disabled=!["granted","prompt"].includes(window.sparxstarRecorderState.micPermission),u.recordButton.textContent="Record",u.recordButton.setAttribute("aria-pressed","false")),u.pauseButton&&(u.pauseButton.disabled=!0,u.pauseButton.textContent="Pause",u.pauseButton.setAttribute("aria-pressed","false")),u.deleteButton&&(u.deleteButton.disabled=!0,u.deleteButton.classList.add("sparxstar_visually_hidden")),u.audioPlayer&&(u.audioPlayer.src&&u.audioPlayer.src.startsWith("blob:")&&URL.revokeObjectURL(u.audioPlayer.src),u.audioPlayer.src="",u.audioPlayer.removeAttribute("controls"),u.audioPlayer.classList.add("sparxstar_visually_hidden"));const e=document.getElementById(`submit_button_${s.formInstanceId}`);e&&(e.disabled=!0),u.downloadLink&&(u.downloadLink.classList.add("sparxstar_visually_hidden"),u.downloadLink.setAttribute("aria-disabled","true"),u.downloadLink.href="#",u.downloadLink.removeAttribute("download")),_updateStatus("Ready to record.")}function _handleDataAvailable(e){e.data.size>0&&(l.push(e.data),e.data.size)}function _handleStop(){if(l.length,_stopAnimationBarLoop(),!e||0===l.length)return _updateStatus("Recording stopped, no audio captured."),void v.cleanup();u.downloadLink&&(navigator.onLine?(u.downloadLink.classList.add("sparxstar_visually_hidden"),u.downloadLink.setAttribute("aria-disabled","true"),u.downloadLink.href="#",u.downloadLink.removeAttribute("download")):(u.downloadLink.href=r,u.downloadLink.download=fileName,u.downloadLink.removeAttribute("aria-disabled"),u.downloadLink.classList.remove("sparxstar_visually_hidden")));const t=e.mimeType;let a;if(t.includes("opus")||t.includes("webm"))a="webm";else{if(!t.includes("aac")&&!t.includes("mp4"))return alert("Unsupported recording format. Try a different browser."),void v.cleanup();a="m4a"}_stopTimerAndResetDisplay();const o=new Blob(l,{type:t}),r=URL.createObjectURL(o);u.audioPlayer&&(u.audioPlayer.src=r,u.audioPlayer.setAttribute("controls",""),u.audioPlayer.classList.remove("sparxstar_visually_hidden")),function _attachAudioToForm(e,t){const a=function _generateUniqueAudioId(){try{if("undefined"!=typeof crypto&&"function"==typeof crypto.randomUUID)return crypto.randomUUID();if("undefined"!=typeof crypto&&"function"==typeof crypto.getRandomValues){const e=new Uint8Array(16);crypto.getRandomValues(e),e[6]=15&e[6]|64,e[8]=63&e[8]|128;const U=t=>e[t].toString(16).padStart(2,"0");return`${U(0)}${U(1)}${U(2)}${U(3)}-${U(4)}${U(5)}-${U(6)}${U(7)}-${U(8)}${U(9)}-${U(10)}${U(11)}${U(12)}${U(13)}${U(14)}${U(15)}`}}catch(t){}let e=(new Date).getTime();"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now());return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){const a=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?a:3&a|8).toString(16)}))}(),o=`audio_${a}.${t}`;u.uuidField&&(u.uuidField.value=a);const r=new File([e],o,{type:e.type});if(!u.fileInput)return void _updateStatus("Recording saved locally. File input not found in form.");try{const e=new DataTransfer;if(e.items.add(r),u.fileInput.files=e.files,u.fileInput.name||u.fileInput.id,_updateStatus("Recording saved and attached to form."),u.fileInput.files&&0!==u.fileInput.files.length){const e=document.getElementById(`submit_button_${s.formInstanceId}`);e&&u.uuidField&&u.uuidField.value&&u.fileInput.files.length>0&&(e.disabled=!1)}else _updateStatus("Recording saved, but your browser does not support automatic file attachment. Please try a different browser.")}catch(i){_updateStatus("Recording saved locally. Error attaching to form.")}const n=new CustomEvent("starmusAudioReady",{detail:{audioId:a,fileName:o,durationMs:y}});u.container.dispatchEvent(n),n.detail}(o,a),_updateStatus("Recording complete. Play, Download, Delete, or Submit."),p=!1,m=!1,u.recordButton&&(u.recordButton.textContent="Record",u.recordButton.setAttribute("aria-pressed","false"),u.recordButton.disabled=!["granted","prompt"].includes(window.sparxstarRecorderState.micPermission)),u.pauseButton&&(u.pauseButton.disabled=!0,u.pauseButton.textContent="Pause",u.pauseButton.setAttribute("aria-pressed","false")),u.deleteButton&&(u.deleteButton.disabled=!1,u.deleteButton.classList.remove("sparxstar_visually_hidden")),c&&(c.getTracks().forEach((e=>e.stop())),c=null)}window.addEventListener("offline",(()=>{(p||m||l.length>0)&&(_updateStatus("Network connection lost. Current recording is paused. Do NOT close page if you wish to save. Try to Stop and Submit when online."),p&&!m&&e&&"recording"===e.state&&v.pause())})),window.addEventListener("online",(()=>{l.length>0?_updateStatus("Network connection restored. You can now Stop your recording and Submit, or Delete and start over."):_updateStatus("Network connection restored."),u.downloadLink&&(u.downloadLink.classList.add("sparxstar_visually_hidden"),u.downloadLink.setAttribute("aria-disabled","true"),u.downloadLink.href="#",u.downloadLink.removeAttribute("download"))}));const v={init:function(e={}){if(s={...s,...e},s.buildHash,!s.formInstanceId)return Promise.resolve(!1);if(u.container=document.querySelector(s.recorderContainerSelector),!u.container)return s.recorderContainerSelector,Promise.resolve(!1);const id=e=>`${e}_${s.formInstanceId}`;return u.recordButton=document.getElementById(id(s.recordButtonId)),u.pauseButton=document.getElementById(id(s.pauseButtonId)),u.deleteButton=document.getElementById(id(s.deleteButtonId)),u.timerDisplay=document.getElementById(id(s.timerDisplayId)),u.audioPlayer=document.getElementById(id(s.audioPlayerId)),u.statusDisplay=document.getElementById(id(s.statusDisplayId)),u.levelBar=document.getElementById(id(s.levelBarId)),u.audioLevelText=document.getElementById(id(s.audioLevelTextId)),u.levelBarWrap=document.getElementById(id(s.levelBarWrapId)),u.uuidField=document.getElementById(id(s.uuidFieldId)),u.fileInput=document.getElementById(id(s.fileInputId)),u.container=document.getElementById(`starmus_audioWrapper_${s.formInstanceId}`),u.downloadLink=document.getElementById(`downloadLink_${s.formInstanceId}`),u.recordButton&&u.recordButton.replaceWith(u.recordButton.cloneNode(!0)),u.pauseButton&&u.pauseButton.replaceWith(u.pauseButton.cloneNode(!0)),u.deleteButton&&u.deleteButton.replaceWith(u.deleteButton.cloneNode(!0)),u.recordButton=document.getElementById(id(s.recordButtonId)),u.pauseButton=document.getElementById(id(s.pauseButtonId)),u.deleteButton=document.getElementById(id(s.deleteButtonId)),u.recordButton&&u.pauseButton&&u.timerDisplay&&u.audioPlayer&&u.statusDisplay?(!u.uuidField||u.fileInput,u.timerDisplay&&u.timerDisplay.setAttribute("aria-live","polite"),f&&clearInterval(f),this.setupEventListeners(),Promise.resolve(this.setupPermissionsAndUI())):Promise.resolve(!1)},setupEventListeners:function(){u.recordButton&&u.pauseButton&&(u.recordButton.addEventListener("click",(()=>{p?this.stop():this.start()})),u.pauseButton.addEventListener("click",(()=>{p&&(m?this.resume():this.pause())})),u.deleteButton&&u.deleteButton.addEventListener("click",(()=>{v.cleanup(),u.deleteButton.classList.add("sparxstar_visually_hidden")})))},setupPermissionsAndUI:async function(){if(u.recordButton&&(u.recordButton.disabled=!0),_handleRecordingReady(),navigator.permissions&&navigator.permissions.query)try{const e=await navigator.permissions.query({name:"microphone"});window.sparxstarRecorderState.micPermission=e.state,e.state;const updateBasedOnPermission=()=>{const e=window.sparxstarRecorderState.micPermission;if(!u.recordButton)return;const t=["granted","prompt"].includes(e);u.recordButton.disabled=!t,t||(_updateStatus("Microphone permission denied. Please allow mic access."),_stopAnimationBarLoop())};updateBasedOnPermission(),e.onchange=()=>{window.sparxstarRecorderState.micPermission=e.state,e.state,updateBasedOnPermission()},f&&clearInterval(f),u.recordButton&&(b&&"function"==typeof b.disconnect&&b.disconnect(),b=createButtonStateEnforcer(u.recordButton,window.sparxstarRecorderState,"micPermission",_log),f=setInterval((()=>{const e=document.getElementById(u.recordButton.id);e&&e!==u.recordButton?(b&&b.disconnect(),u.recordButton=e,b=createButtonStateEnforcer(u.recordButton,window.sparxstarRecorderState,"micPermission",_log)):!e&&b&&(b.disconnect(),b=null,u.recordButton=null)}),3e3))}catch(e){window.sparxstarRecorderState.micPermission="prompt",u.recordButton&&(u.recordButton.disabled=!1),_updateStatus("Microphone permission check failed. Please check your browser settings."),_stopAnimationBarLoop()}else window.sparxstarRecorderState.micPermission="prompt",u.recordButton&&(u.recordButton.disabled=!1);return u.timerDisplay&&(u.timerDisplay.textContent=_formatTime(s.maxRecordingTime),_updateTimerColor(s.maxRecordingTime)),_handleRecordingReady(),!0},start:async function(){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia||!window.MediaRecorder)return void alert("Audio recording is not fully supported in your browser.");let d=["audio/webm;codecs=opus","audio/mp4;codecs=aac","audio/webm","audio/ogg;codecs=opus"].find((e=>MediaRecorder.isTypeSupported(e)));if(!d&&MediaRecorder.isTypeSupported("audio/webm")?d="audio/webm":!d&&MediaRecorder.isTypeSupported("audio/mp4")&&(d="audio/mp4"),d)try{const B=await navigator.mediaDevices.getUserMedia({audio:!0});if(c=B,l=[],e=new MediaRecorder(B,{mimeType:d}),e.ondataavailable=_handleDataAvailable,e.onstop=_handleStop,e.onerror=e=>{e.error,alert(`MediaRecorder error: ${e.error.name}.`),this.stop()},o&&"closed"!==o.state)try{await o.close()}catch(f){}o=null,e.start(),p=!0,m=!1,u.recordButton&&(u.recordButton.textContent="Stop",u.recordButton.setAttribute("aria-pressed","true")),u.pauseButton&&(u.pauseButton.disabled=!1,u.pauseButton.textContent="Pause",u.pauseButton.setAttribute("aria-pressed","false")),u.deleteButton&&(u.deleteButton.disabled=!0,u.deleteButton.classList.add("sparxstar_visually_hidden")),u.audioPlayer&&(u.audioPlayer.classList.add("sparxstar_visually_hidden"),u.audioPlayer.removeAttribute("controls"),u.audioPlayer.src.startsWith("blob:")&&URL.revokeObjectURL(u.audioPlayer.src),u.audioPlayer.src="");const b=document.getElementById(`submit_button_${s.formInstanceId}`);if(b&&(b.disabled=!0),function _startTimerForNewRecording(){y=0,a=Date.now(),t&&clearInterval(t),t=setInterval(_updateTimerDisplay,1e3),_updateTimerDisplay()}(),u.levelBar&&u.levelBar.classList.remove("sparxstar_visually_hidden"),u.levelBar&&(window.AudioContext||window.webkitAudioContext))try{o=new(window.AudioContext||window.webkitAudioContext),r=o.createAnalyser(),r.fftSize=256,n=new Uint8Array(r.frequencyBinCount),i=o.createMediaStreamSource(B),i.connect(r),_animateBar()}catch(f){_updateStatus("Audio level visualization not available.")}}catch(B){B.name,B.message;let e="Microphone access error. Please check permissions.";switch(B.name){case"NotAllowedError":e="Microphone permission denied. Please allow mic access.";break;case"NotFoundError":e="No microphone found. Please connect one."}alert(e),p=!1,m=!1,u.recordButton&&(u.recordButton.textContent="Record"),_handleRecordingReady(),_stopTimerAndResetDisplay(),_stopAnimationBarLoop(),c&&(c.getTracks().forEach((e=>e.stop())),c=null)}else alert("No supported audio format found.")},stop:function(){e&&e.state,p&&e&&"inactive"!==e.state?e.stop():p&&_handleStop()},pause:function(){if(p&&!m&&e&&"recording"===e.state)try{e.pause(),m=!0,function _pauseTimer(){clearInterval(t),t=null,y+=Date.now()-a}(),_stopAnimationBarLoop(),u.pauseButton&&(u.pauseButton.textContent="Resume",u.pauseButton.setAttribute("aria-pressed","true")),_updateStatus("Recording paused")}catch(o){}},resume:function(){if(p&&m&&e&&"paused"===e.state)try{e.resume(),m=!1,function _resumeTimer(){a=Date.now(),t||(t=setInterval(_updateTimerDisplay,1e3))}(),r&&_animateBar(),u.pauseButton&&(u.pauseButton.textContent="Pause",u.pauseButton.setAttribute("aria-pressed","false")),_updateStatus("Recording resumed...")}catch(o){}},cleanup:function(){if(B)return;B=!0,p&&this.stop(),c&&(c.getTracks().forEach((e=>e.stop())),c=null),e&&"inactive"!==e.state&&(e.onstop=null,e.stop()),o&&"closed"!==o.state&&(o.close().then((()=>{})),o=null),_stopAnimationBarLoop(),u.audioPlayer&&(u.audioPlayer.src&&u.audioPlayer.src.startsWith("blob:")&&URL.revokeObjectURL(u.audioPlayer.src),u.audioPlayer.src="",u.audioPlayer.classList.add("sparxstar_visually_hidden"),u.audioPlayer.controls=!1),u.deleteButton&&(u.deleteButton.classList.add("sparxstar_visually_hidden"),u.deleteButton.disabled=!0),u.recordButton&&(u.recordButton.textContent="Record",u.recordButton.setAttribute("aria-pressed","false"),u.recordButton.disabled=!["granted","prompt"].includes(window.sparxstarRecorderState.micPermission)),u.pauseButton&&(u.pauseButton.disabled=!0,u.pauseButton.textContent="Pause");const t=document.getElementById(`submit_button_${s.formInstanceId}`);t&&(t.disabled=!0),u.downloadLink&&(u.downloadLink.classList.add("sparxstar_visually_hidden"),u.downloadLink.setAttribute("aria-disabled","true"),u.downloadLink.href="#",u.downloadLink.removeAttribute("download")),l=[],p=!1,m=!1,_stopTimerAndResetDisplay(),_handleRecordingReady(),u.uuidField&&(u.uuidField.value=""),u.fileInput&&(u.fileInput.value=""),_updateStatus("Recorder reset."),B=!1},destroy:function(){this.cleanup(),b?.disconnect(),b=null,f&&clearInterval(f),f=null,u={},s={}},getRecordedAudioId:function(){return u.uuidField?u.uuidField.value:null}}}();
//# sourceMappingURL=starmus-audio-recorder-module.min.js.map